<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Cmd_CustomFolder_Set.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAAiJJREFUOE/Fkl1I02EYxXfRRVcWWVEIBZYX3gyCIqqLkCIKQzDKgqQPocyiwjDG
        pq5NTaebW1orndY2XVO3WUutsEIqNImYpa4SU5tBUSnLDB35sV9/t5gNI7rzwLl5Oec853nfVzT/GBzo
        xWHRzaGn7zW/Jf/GjLi3y4RvxB7gT6+VySEjNnPx/4XYq7SMe2vCzNOfy5h0p1Nzo5Dq8nyMV3IwXJJz
        TSPjskoSHlprUjP+1RQy+wUzvTJwp/6VcwJuVqr48ckQMjc71AHetxXRaFVxuzofmzEXq0GJWX+B6yVZ
        lGtl6NXSYFi1IZ/RwdJA7YFWBc4aLdMDSvDkhfO9cNafCT0Z8OYUnXVJWCp0iIz6XL73FcIHDXdqi2l/
        oAmK/qz+6jC49jLVFo/vYRzvqsRkpCby7HEDosoSBd/eKvG0ZeO0avD3K6D7RNDYmSIYDzDVnoCvZQej
        97Yw7FiHMi1GWEcWvIsybTbDXVLqLWo6ngpNetKFgGPQkYz/eSITT3Yx1rwVr3M9X2pjcV1czMH46OD0
        GeiLZHS3yLllKYI+ObwU6r7Yx0TrbsYexTHSuJEhm5iPprW4NZEoUtdwOu3Q7EuUFkiwmwtxN5zEpROF
        2K5ZQItqIU05i6jLWoZREsXVc6tJFqbfra+YDdDlnUenOE6B9AiZZ/ZzNiWBo0nb2bNzE9s2i9kgjiE2
        OopVK5eyfEkEKyIjwv/BPEMk+gW4/M0coQ65TwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="Cmd_Process.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vQAADr0BR/uQrQAAAItJREFUOE9joAm4+fbafyiTPJAwI+I/RYaADLAs0yffkKgpQf833FpMviHBE7z/
        l+3PJt8Qny5nsAEgHLUogHRDHJst/mdsiAVrtm3W/69TrPBfIo37/4NX94gzxLxGD0UzfwIL8ZpBQK9U
        mXzNIKCSL0W+ZhCQzhAkXzMIiCRzkq8ZBCjSTGfAwAAAPNN3xFsnRzUAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="FolderDialog_SourceImage.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>-3, 9</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA9vb2ZPb29t/29vb/9vb23/b29mQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA9vb2ZNnZ2f9lZWX/QkJC/2VlZf/Z2dn/9vb2ZAAAAAAAAAAAAAAAAAAAAAAAAAAA9vb2AgAA
        AAAAAAAAAAAAAPb29t9lZWX/QkJC/0JCQv9CQkL/ZWVl//b29t8AAAAAAAAAAAAAAAD29vZk9vb23/X1
        9f/29vbf9vb2ZAAAAAD29vb/Q0ND/0JCQv9CQkL/QkJC/0NDQ//19fX/9vb2AgAAAAD29vZk2dnZ/wAA
        //8AAP//AAD//9nZ2f/29vZk9vb22mhoaP9CQkL/QkJC/0JCQv9oaGj/9vb22gAAAAAAAAAA9vb23wAA
        //8AAP//8e/w/wAA//8AAP//9vb23/b29l/a2tr/Z2dn/0JCQv9nZ2f/2tra//b29l8AAAAA9vb2AfX1
        9f8AAP//8e/w//Hv8P/x7/D/AAD///b29v8AAAAA9vb2Xvb29v9CQkL/6+vr//b29mMAAAAAAAAAAPb2
        9jT09PT6AAD//wAA///x7/D/AAD//wAA///29vbfAAAAAAAAAAD29vb/QkJC/+vr6//29vYQAAAAAPb2
        9krv7+/2eHh4/2RkZP8AAP//AAD//wAA///Z2dn/9vb2ZAAAAAAAAAAA9vb2/0JCQv/r6+v/9vb2EPb2
        9mTn5+f9aGho/3Nzc//t7e329vb23vb29v/29vbf9vb2ZAAAAAAAAAAA9vb2Xvb29v9CQkL/6+vr//b2
        9qvd3d3/W1tb/4aGhv/y8vLs9vb2OwAAAAAAAAAAAAAAAAAAAAAAAAAA9vb2X9ra2v9nZ2f/QkJC/2ho
        aP+1tbX/UFBQ/5qamv/19fXf9vb2JwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPb29tpoaGj/QkJC/0JC
        Qv9CQkL/Q0ND/66urv/29vbN9vb2GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD29vb/Q0ND/0JC
        Qv9CQkL/QkJC/0JCQv/19fX/9vb2DgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9vb232Vl
        Zf9CQkL/QkJC/0JCQv9lZWX/9vb23wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPb2
        9mTZ2dn/ZWVl/0JCQv9lZWX/2dnZ//b29mQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA9vb2ZPb29t/29vb/9vb23/b29mQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAg/8AAAH3AAABwQAAAIAAAAGAAAABAAAAgwAAAMIAAADAAQAAgB8AAAA/AAAAfwAAAP8AAAH/
        AAAB/wAAg/8AAA==
</value>
  </data>
</root>